// **************************************************************************
// RiverpodGenerator
// **************************************************************************

@ProviderFor(Sound)
const soundProvider = SoundProvider._();

final class SoundProvider extends $AsyncNotifierProvider<Sound, void> {
  const SoundProvider._()
    : super(
        from: null,
        argument: null,
        retry: null,
        name: r'soundProvider',
        isAutoDispose: true,
        dependencies: null,
        $allTransitiveDependencies: null,
      );

  @override
  String debugGetCreateSourceHash() => _$soundHash();

  @$internal
  @override
  Sound create() => Sound();

  @$internal
  @override
  $AsyncNotifierProviderElement<Sound, void> $createElement(
    $ProviderPointer pointer,
  ) => $AsyncNotifierProviderElement(pointer);
}

String _$soundHash() => r'a189c7bd03f9c085dbb2d1ab768d898c317a773a';

abstract class _$Sound extends $AsyncNotifier<void> {
  FutureOr<void> build();
  @$mustCallSuper
  @override
  void runBuild() {
    build();
    final ref = this.ref as $Ref<AsyncValue<void>>;
    final element =
        ref.element
            as $ClassProviderElement<
              AnyNotifier<AsyncValue<void>>,
              AsyncValue<void>,
              Object?,
              Object?
            >;
    element.handleValue(ref, null);
  }
}

// ignore_for_file: type=lint
// ignore_for_file: subtype_of_sealed_class, invalid_use_of_internal_member, invalid_use_of_visible_for_testing_member, deprecated_member_use_from_same_package
